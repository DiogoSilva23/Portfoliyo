@startuml

package models {
    abstract class Profile {
        -String name
        -String userType /'Isto deve ser uma classe'/
        -String description
        -String email
        -String password
        -String location
        +void login(email, password) /'Deve dar return a algo'/
        +void logout()
        +Boolean register(email, password, username) /'Deve receber mais coisas, deve dar return a User'/
    }

    class Admin {
        -String gender /'Pode ser Male, Female, Other'/
        +Boolean acceptEnterpriseRegister()
        +Collection<Portfolio> searchEveryPortfolio() /'Talvez uma collection de Portfolios'/
        +Collection<Portfolio> filterPortfoliyo(age, location)
    }

    class Enterprise {
        -String enterpriseWebURL
        -String enterpriseLogoURL
        +Collection<Users> watchVisibleUsers()
        +Collection<Portfolio> filterPortfoliyo(age, location) /'Portfolio deve ser uma classe'/
        +void makeOffer()
        +Boolean registerEnterprise(email, password)
    }

    class User {
        -Collection<Location> workedLocations
        -String username
        -Date birthDate
        -Integer age
        -String gender
        -Collection<Offer> offerSection /'Offer deve ser uma classe'/
        -portfolio /'Isto deve ser uma classe'/
        -friendList /'Isto deve ser uma classe'/
        -Boolean visibility
        +void editRegister()
        +void addWorkingLocation()
        +void removeWorkingLocation()
        +void addAcademicInfo()
        +void removeAcademicInfo()
        +void removeFriend()
        +Boolean makeFriendRequest() /'true foi enviado com sucesso, false n√£o foi enviado'/
        +void acceptFriendRequest()
        +void rejectFriendRequest()
        +Collection<Users> viewFriendList()
        +Portfolio viewPortfolio()
    }
}

package controllers {
    class Controller <<controller>> {
    }
}

Controller *-- Profile
Profile <|-- Admin
Profile <|-- User
Profile <|-- Enterprise

@enduml